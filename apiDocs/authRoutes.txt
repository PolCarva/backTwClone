/ AUTH ROUTES

/register
post:
summary: crea un nuevo usuario y manda token de verificacion al mail
responses:
        201:
 *      description: success: true, message: 'usuario registrado, verificar mail'.
 *      content:
 *        application/json:
 *          schema:
 *            type: object
 *            properties:
 *              data:
 *                type: object
 *                properties:
 *                  full_name:
 *                    type: string
 *                    description: nombre completo del nuevo usuario.
 *                    example: 'lucas lorenzo'                    
 *                  username:
 *                    type: string
 *                    description: nombre de usuario.
 *                    example: 'lucas1'                    
 *                  email:
 *                    type: string
 *                    description: mail del usuario.
 *                    example: 'lucasalorenzo2002@gmail.com'                  
 *                  password:
 *                    type: string
 *                    description: contrasena del usuario.
 *                    example: '1234567876'
 *                    minLength: 8     
 
 /login
 post:
 summary: autentica a un usuario que ya este validado
 responses:
         201:
  *      description: success: true, message: 'sesion iniciada', token: 'token de acceso`.
  *      content:
  *        application/json:
  *          schema:
  *            type: object
  *            properties:
  *              data:
  *                type: object
  *                properties:
  *                  username:
  *                    type: string
  *                    description: nombre de usuario.
  *                    example: 'lucas1'                   
  *                  password:
  *                    type: string
  *                    description: contrasena del usuario.
  *                    example: '1234567876'    
  


 /partidos
 get:
 summary: devuelve todos los partidos creados que esten dentro del radio de distancia elegido por el usuario
 responses:
        200:
  *      description: array de los partidos.
  *      content:
  *        application/json:
  *          schema:
  *            type: object
  *            responses:
  *              data:
  *                type: object
  *                properties:
  *                  id:
  *                    type: string
  *                    description: id del usuario.
  *                    example: 5294e1005e953e0dcbc515db
  *                  matchType:
  *                    type: number
  *                    description: si es un partido de futbol 5, 6, 7, 8, 9, 10 o 11.
  *                    example: 7
  *                    min: 5
  *                    max: 11                    
  *                  category:
  *                    type: string
  *                    description: si es masculino, mixto o femenino.
  *                    example: mixto                    
  *                  address:
  *                    type: string
  *                    description: la direccion del evento.
  *                    example: bermudez 2276                   
  *                  fieldName:
  *                    type: string
  *                    description: el nombre de la cancha.
  *                    example: gevp   
  *                  date:
  *                    type: datetime-local
  *                    description: la fecha del evento.
  *                    example: 2023-06-25T14:30   
  *                  playersNeeded:
  *                    type: number
  *                    description: cantidad de jugadores que hacen falta.
  *                    example: 3
  *                    max: totalPlayers   
  *                  matchExtraInfo:
  *                    type: string
  *                    description: informacion extra necesaria para el partido.
  *                    example: la cancha es abajo de una autopista   
  *                  priceByPlayer:
  *                    type: number
  *                    description: cuanto debe abonar cada jugador.
  *                    example: 500   
  *                  location:
  *                    type: [number]
  *                    description: coordenadas del partido.
  *                    example: [-34,6767447, -50,655646]   
  *                  host:
  *                    type: object
  *                    description: objeto de usuario que es el host del partido.
  *                    example: userSchema   
  *                  players:
  *                    type: [object]
  *                    description: devuelve un array de arrays donde estan los jugadores invitados y los registados, arranca vacio.
  *                    example: userSchema   
